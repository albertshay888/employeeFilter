{"version":3,"sources":["List.jsx","Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["List","searchTerm","filteredResults","APIData","Card","Group","itemsPerRow","style","marginTop","length","map","item","Content","Header","first_name","last_name","Description","email","name","Search","setAPIData","useState","setSearchTerm","setFilteredResults","padding","Input","icon","placeholder","onChange","e","value","filteredData","filter","Object","values","join","toLowerCase","includes","searchData","target","App","useEffect","axios","get","then","response","data","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAuCeA,EArCF,SAAC,GAA4C,IAA3CC,EAA0C,EAA1CA,WAAYC,EAA8B,EAA9BA,gBAAiBC,EAAa,EAAbA,QACxC,OACI,cAACC,EAAA,EAAKC,MAAN,CAAYC,YAAa,EAAGC,MAAO,CAAEC,UAAW,IAAhD,SACCP,EAAWQ,OAAS,EACjBP,EAAgBQ,KAAI,SAACC,GACjB,OACI,cAACP,EAAA,EAAD,UACI,eAACA,EAAA,EAAKQ,QAAN,WACI,eAACR,EAAA,EAAKS,OAAN,WAAcF,EAAKG,WAAY,IAAKH,EAAKI,aAEzC,cAACX,EAAA,EAAKY,YAAN,UAEEL,EAAKM,gBAQvBd,EAAQO,KAAI,SAACC,GACT,OACI,cAACP,EAAA,EAAD,UACI,eAACA,EAAA,EAAKQ,QAAN,WACI,cAACR,EAAA,EAAKS,OAAN,UAAcF,EAAKO,OACnB,cAACd,EAAA,EAAKY,YAAN,UACKL,EAAKM,mBCxBvB,SAASE,EAAT,GAAwC,IAAvBhB,EAAsB,EAAtBA,QAE5B,GAFkD,EAAbiB,WAEDC,mBAAS,KAA7C,mBAAOpB,EAAP,KAAmBqB,EAAnB,KACA,EAA8CD,mBAAS,IAAvD,mBAAOnB,EAAP,KAAwBqB,EAAxB,KAgBA,OACI,sBAAKhB,MAAO,CAAEiB,QAAS,IAAvB,UACI,cAACC,EAAA,EAAD,CAAOC,KAAK,SACRC,YAAY,YACZC,SAAU,SAACC,GAAD,OAjBH,SAACC,GAEhB,GADAR,EAAcQ,GACK,KAAf7B,EAAmB,CACnB,IAAM8B,EAAe5B,EAAQ6B,QAAO,SAACrB,GACjC,OAAOsB,OAAOC,OAAOvB,GAAMwB,KAAK,IAAIC,cAAcC,SAASpC,EAAWmC,kBAE1Eb,EAAmBQ,QAGnBR,EAAmBpB,GAQEmC,CAAWT,EAAEU,OAAOT,UAEzC,cAAC,EAAD,CAAM7B,WAAYA,EAAYC,gBAAiBA,EAAiBC,QAASA,O,qBCRtEqC,MAhBf,WACE,MAA8BnB,mBAAS,IAAvC,mBAAOlB,EAAP,KAAgBiB,EAAhB,KAQA,OAPAqB,qBAAU,WACRC,IAAMC,IAAN,sCACKC,MAAK,SAACC,GACHzB,EAAWyB,EAASC,KAAKA,WAElC,IAGC,qBAAKC,UAAU,MAAf,SACE,cAAC5B,EAAD,CAAQhB,QAASA,EAASiB,WAAYA,OCJ7B4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBN,MAAK,YAAkD,IAA/CO,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fc9a76f2.chunk.js","sourcesContent":["import { Card } from 'semantic-ui-react'\n\nconst List = ({searchTerm, filteredResults, APIData}) => {\n    return (\n        <Card.Group itemsPerRow={3} style={{ marginTop: 20 }}>\n        {searchTerm.length > 1 ? (\n            filteredResults.map((item) => {\n                return (\n                    <Card>\n                        <Card.Content>\n                            <Card.Header>{item.first_name}{\" \"}{item.last_name}</Card.Header>\n                            {/* <Card.Header>{item.last_name}</Card.Header> */}\n                            <Card.Description>\n                            \n                             {item.email}\n                         \n                            </Card.Description>\n                        </Card.Content>\n                    </Card>\n                )\n            })\n        ) : (\n            APIData.map((item) => {\n                return (\n                    <Card>\n                        <Card.Content>\n                            <Card.Header>{item.name}</Card.Header>\n                            <Card.Description>\n                                {item.email}\n                            </Card.Description>\n                        </Card.Content>\n                    </Card>\n                )\n            })\n        )}\n    </Card.Group>\n    )\n}\n\nexport default List;","import React, { useState} from 'react';\n\nimport {  Input } from 'semantic-ui-react'\nimport List from './List'\nexport default function Search({APIData, setAPIData}) {\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const [filteredResults, setFilteredResults] = useState([]);\n\n\n    const searchData = (value) => {\n        setSearchTerm(value)\n        if (searchTerm !== '') {\n            const filteredData = APIData.filter((item) => {\n                return Object.values(item).join('').toLowerCase().includes(searchTerm.toLowerCase())\n            })\n            setFilteredResults(filteredData)\n        }\n        else {\n            setFilteredResults(APIData)\n        }\n    }\n\n    return (\n        <div style={{ padding: 20 }}>\n            <Input icon='search'\n                placeholder='Search...'\n                onChange={(e) => searchData(e.target.value)}\n            />\n            <List searchTerm={searchTerm} filteredResults={filteredResults} APIData={APIData}/>\n        \n        </div>\n    )\n}","import './App.css';\nimport Search from './Search';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [APIData, setAPIData] = useState([])\n  useEffect(() => {\n    axios.get(`https://reqres.in/api/users?page=2`)\n        .then((response) => {\n            setAPIData(response.data.data);\n        })\n}, [])\n\n  return (\n    <div className=\"App\">\n      <Search APIData={APIData} setAPIData={setAPIData}/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'semantic-ui-css/semantic.min.css'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}